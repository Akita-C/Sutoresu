"use client";

import Link from "next/link";
import { Store, LogIn, Phone, MessageSquare, Bug } from "lucide-react";

import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from "@/components/ui/navigation-menu";
import { Button } from "@/components/ui/button";
import { ThemeToggleSimple } from "@/components/common/theme-toggle-simple";
import { cn } from "@/lib/utils";
import { AuthGuard } from "@/features/auth/components/auth-guard";
import { UserAvatar } from "@/features/auth/components/user-avatar";

// Mock data cho Products menu
const productsData = {
  leftColumn: [
    {
      title: "Laptops & Computers",
      description: "M√°y t√≠nh x√°ch tay v√† PC cao c·∫•p",
      href: "/products/laptops",
      icon: "üíª",
    },
    {
      title: "Smartphones",
      description: "ƒêi·ªán tho·∫°i th√¥ng minh m·ªõi nh·∫•t",
      href: "/products/smartphones",
      icon: "üì±",
    },
    {
      title: "Gaming Gear",
      description: "Thi·∫øt b·ªã gaming chuy√™n nghi·ªáp",
      href: "/products/gaming",
      icon: "üéÆ",
    },
    {
      title: "Audio & Video",
      description: "Thi·∫øt b·ªã √¢m thanh v√† video",
      href: "/products/audio-video",
      icon: "üéß",
    },
  ],
  rightColumn: [
    {
      title: "Accessories",
      description: "Ph·ª• ki·ªán c√¥ng ngh·ªá ƒëa d·∫°ng",
      href: "/products/accessories",
      icon: "üîå",
    },
    {
      title: "Smart Home",
      description: "Thi·∫øt b·ªã nh√† th√¥ng minh",
      href: "/products/smart-home",
      icon: "üè†",
    },
    {
      title: "Cameras",
      description: "M√°y ·∫£nh v√† thi·∫øt b·ªã quay phim",
      href: "/products/cameras",
      icon: "üì∑",
    },
    {
      title: "Wearables",
      description: "Thi·∫øt b·ªã ƒëeo tay v√† smartwatch",
      href: "/products/wearables",
      icon: "‚åö",
    },
  ],
};

// Mock data cho Contact menu
const contactData = [
  {
    title: "Contact Sales",
    description: "Li√™n h·ªá ƒë·ªôi b√°n h√†ng ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n s·∫£n ph·∫©m",
    href: "/contact/sales",
    icon: Phone,
  },
  {
    title: "Contact Support",
    description: "H·ªó tr·ª£ k·ªπ thu·∫≠t v√† gi·∫£i ƒë√°p th·∫Øc m·∫Øc",
    href: "/contact/support",
    icon: MessageSquare,
  },
  {
    title: "Submit Bug Report",
    description: "B√°o c√°o l·ªói v√† g√≥p √Ω c·∫£i thi·ªán",
    href: "/contact/bug-report",
    icon: Bug,
  },
];

const ListItem = ({
  className,
  title,
  children,
  icon,
  IconComponent,
  ...props
}: {
  className?: string;
  title: string;
  children: React.ReactNode;
  icon?: string;
  IconComponent?: React.ComponentType<{ className?: string }>;
} & React.ComponentPropsWithoutRef<"a">) => {
  return (
    <li>
      <NavigationMenuLink asChild>
        <a
          className={cn(
            "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground group",
            className,
          )}
          {...props}
        >
          <div className="flex items-center gap-2">
            {icon && <span className="text-lg">{icon}</span>}
            {IconComponent && (
              <IconComponent className="h-4 w-4 text-primary group-hover:text-accent-foreground" />
            )}
            <div className="text-sm font-medium leading-none">{title}</div>
          </div>
          <p className="line-clamp-2 text-sm leading-snug text-muted-foreground group-hover:text-muted-foreground">
            {children}
          </p>
        </a>
      </NavigationMenuLink>
    </li>
  );
};

export function Header() {
  return (
    <header className="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex h-16 items-center justify-between">
          {/* Logo - Left */}
          <div className="flex items-center">
            <Link href="/" className="flex items-center space-x-2">
              <Store className="h-6 w-6 text-primary" />
              <span className="font-bold text-xl">Sutoresu</span>
            </Link>
          </div>

          {/* Navigation Menu - Center */}
          <div className="hidden md:flex flex-1 justify-center">
            <NavigationMenu>
              <NavigationMenuList className="space-x-2">
                <NavigationMenuItem>
                  <NavigationMenuTrigger className="text-base">
                    Products
                  </NavigationMenuTrigger>
                  <NavigationMenuContent>
                    <div className="grid gap-3 p-6 md:w-[500px] lg:w-[700px] lg:grid-cols-2">
                      {/* Left Column */}
                      <div className="space-y-2">
                        <h4 className="text-sm font-medium leading-none mb-3 text-muted-foreground border-b border-border pb-2">
                          Electronics & Tech
                        </h4>
                        <ul className="space-y-1">
                          {productsData.leftColumn.map((item) => (
                            <ListItem
                              key={item.title}
                              title={item.title}
                              href={item.href}
                              icon={item.icon}
                            >
                              {item.description}
                            </ListItem>
                          ))}
                        </ul>
                      </div>

                      {/* Right Column */}
                      <div className="space-y-2">
                        <h4 className="text-sm font-medium leading-none mb-3 text-muted-foreground border-b border-border pb-2">
                          Lifestyle & More
                        </h4>
                        <ul className="space-y-1">
                          {productsData.rightColumn.map((item) => (
                            <ListItem
                              key={item.title}
                              title={item.title}
                              href={item.href}
                              icon={item.icon}
                            >
                              {item.description}
                            </ListItem>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </NavigationMenuContent>
                </NavigationMenuItem>

                <NavigationMenuItem>
                  <NavigationMenuTrigger className="text-base">
                    Contact
                  </NavigationMenuTrigger>
                  <NavigationMenuContent>
                    <div className="p-4 md:w-[400px]">
                      <div className="space-y-2">
                        <h4 className="text-sm font-medium leading-none mb-3 text-muted-foreground border-b border-border pb-2">
                          Get in Touch
                        </h4>
                        <ul className="space-y-1">
                          {contactData.map((item) => (
                            <ListItem
                              key={item.title}
                              title={item.title}
                              href={item.href}
                              IconComponent={item.icon}
                            >
                              {item.description}
                            </ListItem>
                          ))}
                        </ul>
                      </div>
                    </div>
                  </NavigationMenuContent>
                </NavigationMenuItem>
              </NavigationMenuList>
            </NavigationMenu>
          </div>

          {/* Right Side Actions */}
          <div className="flex items-center space-x-3">
            <AuthGuard
              requireAuth={true}
              fallback={
                <Button variant="default" size="sm" asChild>
                  <Link href="/login" className="flex items-center gap-2">
                    <LogIn className="h-4 w-4" />
                    <span className="hidden sm:inline">Log in</span>
                  </Link>
                </Button>
              }
            >
              <UserAvatar />
            </AuthGuard>

            {/* Theme Toggle */}
            <ThemeToggleSimple />
          </div>
        </div>
      </div>
    </header>
  );
}
